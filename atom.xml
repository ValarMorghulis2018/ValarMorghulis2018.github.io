<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>六姐的博客</title>
  
  <subtitle>Valar Morghulis</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-14T02:41:27.742Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Six Sister</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 1</title>
    <link href="http://yoursite.com/2019/10/14/Leetcode-1/"/>
    <id>http://yoursite.com/2019/10/14/Leetcode-1/</id>
    <published>2019-10-14T02:40:50.000Z</published>
    <updated>2019-10-14T02:41:27.742Z</updated>
    
    <content type="html"><![CDATA[<p>1.两数之和</p><p>为了对运行时间复杂度进行优化，我们需要一种更有效的方法来检查数组中是否存在目标元素。如果存在，我们需要找出它的索引。保持数组中的每个元素与其索引相互对应的最好方法是什么？哈希表。</p><p>通过以空间换取速度的方式，我们可以将查找时间从 O(n)降低到 O(1)。哈希表正是为此目的而构建的，它支持以 近似 恒定的时间进行快速查找。我用“近似”来描述，是因为一旦出现冲突，查找用时可能会退化到 O(n)。但只要你仔细地挑选哈希函数，在哈希表中进行查找的用时应当被摊销为 O(1)。</p><p>一个简单的实现使用了两次迭代。在第一次迭代中，我们将每个元素的值和它的索引添加到表中。然后，在第二次迭代中，我们将检查每个元素所对应的目标元素（target - nums[i]）是否存在于表中。注意，该目标元素不能是 nums[i] 本身！</p><p>复杂度分析：</p><p>时间复杂度：O(n)， 我们把包含有 n个元素的列表遍历两次。由于哈希表将查找时间缩短到 O(1) ，所以时间复杂度为 O(n)。</p><p>空间复杂度：O(n)， 所需的额外空间取决于哈希表中存储的元素数量，该表中存储了n个元素。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.两数之和&lt;/p&gt;
&lt;p&gt;为了对运行时间复杂度进行优化，我们需要一种更有效的方法来检查数组中是否存在目标元素。如果存在，我们需要找出它的索引。保持数组中的每个元素与其索引相互对应的最好方法是什么？哈希表。&lt;/p&gt;
&lt;p&gt;通过以空间换取速度的方式，我们可以将查找时间从 O(
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>subread安装和使用说明</title>
    <link href="http://yoursite.com/2018/11/15/subread%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2018/11/15/subread安装和使用说明/</id>
    <published>2018-11-15T04:46:52.000Z</published>
    <updated>2018-11-15T04:51:47.422Z</updated>
    
    <content type="html"><![CDATA[<h1 id="subread安装和使用说明"><a href="#subread安装和使用说明" class="headerlink" title="subread安装和使用说明"></a>subread安装和使用说明</h1><a id="more"></a><h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><p><code>tips</code>: 二进制版本软件，直接找到官网下载解压即可使用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/biosoft</span><br><span class="line">wget https://sourceforge.net/projects/subread/files/subread-1.5.3/subread-1.5.3-Linux-x86_64.tar.gz</span><br><span class="line">tar zxvf subread-1.5.3-Linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure></p><hr><h1 id="建立索引"><a href="#建立索引" class="headerlink" title="建立索引"></a>建立索引</h1><p><code>tips</code>:   每个比对工具的算法不一样，所以每个工具都需要对参考基因组建立自己的索引。本身参考基因组占一篇空间就不小，索引之后更大!<br>需要自行从UCSC下载参考基因组<br>放在了~/reference/genome/ 目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">buildindex=~/biosoft/featureCounts/subread-1.5.3-Linux-x86_64/bin/subread-buildindex</span><br><span class="line">cd /home/jianmingzeng/reference/index/subread/</span><br><span class="line">$buildindex -o mm10  ~/reference/genome/mm10/mm10.fa</span><br><span class="line">$buildindex -o hg19  ~/reference/genome/hg19/hg19.fa</span><br><span class="line">$buildindex -o hg38  ~/reference/genome/hg38/hg38.fa</span><br></pre></td></tr></table></figure></p><p>得到的索引文件如下：</p><ul><li>749M Sep 15 17:37 hg19.00.b.array</li><li>4.9G Sep 15 17:37 hg19.00.b.tab</li><li>5.5K Sep 15 17:33 hg19.files</li><li>0 Sep 15 17:17 hg19.log</li><li>2.3K Sep 15 17:38 hg19.reads</li><li>766M Sep 15 18:01 hg38.00.b.array</li><li>5.0G Sep 15 18:01 hg38.00.b.tab</li><li>29K Sep 15 17:57 hg38.files</li><li>0 Sep 15 17:38 hg38.log</li><li>14K Sep 15 18:01 hg38.reads</li><li>652M Sep 15 17:17 mm10.00.b.array</li><li>4.4G Sep 15 17:17 mm10.00.b.tab</li><li>3.9K Sep 15 17:13 mm10.files</li><li>0 Sep 15 16:52 mm10.log</li><li>1.6K Sep 15 17:17 mm10.reads</li></ul><hr><h1 id="单个比对"><a href="#单个比对" class="headerlink" title="单个比对"></a>单个比对</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/biosoft/subread-1.5.3-Linux-x86_64/bin/subjunc -T 5 -i ~/reference/index/subread/hg19 -r KPGP-00001_L1_R1 -R KPGP-00001_L1_R2  -o tmp.subjunc.sam</span><br></pre></td></tr></table></figure><h1 id="批量比对"><a href="#批量比对" class="headerlink" title="批量比对"></a>批量比对</h1><p><code>tips</code>:做好一个配置文件，就可以运行下面的脚本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">subjunc=&quot;/home/jianmingzeng/biosoft/featureCounts/subread-1.5.3-Linux-x86_64/bin/subjunc&quot;; </span><br><span class="line">subjunc_mm10_index=&apos;/home/jianmingzeng/reference/index/subread/mm10&apos;;</span><br><span class="line">cat $config |while read id</span><br><span class="line">do</span><br><span class="line">    arr=($id)</span><br><span class="line">    fq1=$&#123;arr[1]&#125;</span><br><span class="line">    fq2=$&#123;arr[2]&#125;</span><br><span class="line">    sample=$&#123;arr[0]&#125;</span><br><span class="line">    echo &quot;  start alignment for $sample&quot; `date`</span><br><span class="line">    #$hisat -p 5 -x $mm10_index -1 $fq1 -2 $fq2 -S $sample.sam 2&gt;$sample.hisat.log</span><br><span class="line">    #samtools sort -O bam -@ 5  -o $sample.bam $sample.sam</span><br><span class="line">    $subjunc -T 5  -i $subjunc_mm10_index -r $fq1  -R $fq2 -o $&#123;sample&#125;_subjunc.bam</span><br><span class="line">    echo &quot;  end alignment for $sample&quot; `date`</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p>配置文件就3列，第一列是样本名，第二列是该样本的fastq1，第二列是fastq2。多个样本的样本名不运行重复。</p><hr><h1 id="批量计算表达量"><a href="#批量计算表达量" class="headerlink" title="批量计算表达量"></a>批量计算表达量</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mm10_gtf=&apos;/home/jianmingzeng/reference/gtf/gencode/gencode.vM12.annotation.gtf&apos;;</span><br><span class="line">featureCounts=&apos;/home/jianmingzeng/biosoft/featureCounts/subread-1.5.3-Linux-x86_64/bin/featureCounts&apos;;</span><br><span class="line">$featureCounts -T 5 -p -t exon -g gene_id -a $mm10_gtf -o  counts.txt   *.bam</span><br></pre></td></tr></table></figure><p>实在是没有想到这个软件居然会如此快，1M的reads耗时三五秒即可，甩之前的htseq-counts好几条街。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;subread安装和使用说明&quot;&gt;&lt;a href=&quot;#subread安装和使用说明&quot; class=&quot;headerlink&quot; title=&quot;subread安装和使用说明&quot;&gt;&lt;/a&gt;subread安装和使用说明&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
